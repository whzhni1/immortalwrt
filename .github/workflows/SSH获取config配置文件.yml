name: 纯菜单配置模式

on:
  workflow_dispatch:
    inputs:
      REPO_VERSION:
        description: '输入 ImmortalWrt 版本（如 v24.10.2）'
        required: false
        default: 'v24.10'
        type: string
      CONFIG_NAME:
        description: '配置文件名（不含.config后缀）'
        required: true
        default: 'my-config'
        type: string
      LOAD_CUSTOM_FEEDS:
        description: '加载自定义插件库（执行part1.sh）'
        required: false
        default: false
        type: boolean

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  TZ: Asia/Shanghai

jobs:
  pure-menuconfig:
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    
    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 设置变量
      run: |
        REPO_VERSION="${{ github.event.inputs.REPO_VERSION || 'v24.10' }}"
        CONFIG_NAME="${{ github.event.inputs.CONFIG_NAME }}"
        LOAD_CUSTOM_FEEDS="${{ github.event.inputs.LOAD_CUSTOM_FEEDS }}"
        
        echo "REPO_BRANCH=$REPO_VERSION" >> $GITHUB_ENV
        echo "CONFIG_NAME=$CONFIG_NAME" >> $GITHUB_ENV
        echo "LOAD_CUSTOM_FEEDS=$LOAD_CUSTOM_FEEDS" >> $GITHUB_ENV

    - name: 初始化编译环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev git
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载源码
      working-directory: /workdir
      run: |
        git clone --depth 1 "$REPO_URL" -b "$REPO_BRANCH" ImmortalWrt || {
          git clone --depth 1 "$REPO_URL" ImmortalWrt
        }
        ln -sf /workdir/ImmortalWrt $GITHUB_WORKSPACE/ImmortalWrt

    - name: 加载自定义插件库
      if: env.LOAD_CUSTOM_FEEDS == 'true'
      run: |
        cd ImmortalWrt
        [ -f "$GITHUB_WORKSPACE/part1.sh" ] && {
          chmod +x "$GITHUB_WORKSPACE/part1.sh"
          "$GITHUB_WORKSPACE/part1.sh"
        }

    - name: 更新feeds
      run: |
        cd ImmortalWrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        rm -f .config

    - name: 等待SSH配置
      uses: luchina-gabriel/oss-ssh-action@v1.0.0
      with:
        password: ${{ github.run_id }}
        timezone: Asia/Shanghai

    - name: 保存配置
      run: |
        cd ImmortalWrt
        if [ -f .config ]; then
          cp .config "/tmp/$CONFIG_NAME.config"
          echo "✅ 配置已保存"
        else
          echo "❌ 未找到配置文件"
          exit 1
        fi

    - name: 发布配置
      uses: softprops/action-gh-release@v1
      with:
        tag_name: config-${{ env.CONFIG_NAME }}
        files: /tmp/${{ env.CONFIG_NAME }}.config

    - name: 完成提示
      run: echo "✅ 配置完成: $CONFIG_NAME.config"
